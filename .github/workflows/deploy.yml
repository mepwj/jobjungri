name: Deploy to Production

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 디렉토리 생성 및 이동
            mkdir -p ~/jobjungri
            cd ~/jobjungri
            
            # 기존 컨테이너 중지 및 삭제
            docker-compose down || true
            
            # docker-compose.yml 파일 생성
            echo "version: '3.8'

            services:
              mongodb:
                image: mongo:7
                container_name: jobjungri-mongodb
                ports:
                  - \"27017:27017\"
                environment:
                  - MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_USERNAME }}
                  - MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_PASSWORD }}
                  - MONGO_INITDB_DATABASE=jobjungri
                volumes:
                  - mongodb_data:/data/db
                networks:
                  - jobjungri-network
                restart: unless-stopped
                healthcheck:
                  test: [\"CMD\", \"mongosh\", \"--eval\", \"db.adminCommand('ping')\"]
                  interval: 10s
                  timeout: 5s
                  retries: 5

              nextjs:
                image: ghcr.io/${{ github.repository }}:latest
                container_name: jobjungri-nextjs
                ports:
                  - \"8080:8080\"
                depends_on:
                  mongodb:
                    condition: service_healthy
                environment:
                  - MONGODB_URI=mongodb://${{ secrets.MONGO_USERNAME }}:${{ secrets.MONGO_PASSWORD }}@mongodb:27017/jobjungri?authSource=admin
                  - OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
                networks:
                  - jobjungri-network
                restart: unless-stopped

            networks:
              jobjungri-network:
                driver: bridge

            volumes:
              mongodb_data:
                driver: local" > docker-compose.yml
            
            # GitHub 패키지 레지스트리에 로그인
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # 기존 이미지 제거 (선택 사항)
            docker rmi ghcr.io/${{ github.repository }}:latest || true
            
            # 새 이미지 다운로드 및 컨테이너 시작
            docker-compose pull
            docker-compose up -d
            
            # 로그인 세션 정리
            docker logout ghcr.io
